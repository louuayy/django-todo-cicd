name: Django CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Install dependencies
        run: pipenv install --dev

      - name: Run migrations
        run: pipenv run python manage.py migrate

      - name: Run tests
        run: pipenv run python manage.py test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: louaymedeni/python-django:latest
          load: true  # Load the image into the Docker daemon

      - name: List all Docker images
        run: docker images

      - name: Confirm image built
        run: |
          docker images | grep "louaymedeni/python-django" || (echo "Image not found!" && exit 1)

      - name: Push Docker image
        run: |
          echo "Pushing Docker image..."
          docker images | grep louaymedeni/python-django || (echo "Image not found!" && exit 1)
          docker push louaymedeni/python-django:latest
        continue-on-error: true

  deploy-to-minikube:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kind
        uses: helm/kind-action@v1.9.0
        with:
          version: v0.23.0
          cluster_name: kind-cluster

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy to Kubernetes
        run: |
          echo "Deploying to Kubernetes..."
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      - name: Wait for deployment
        run: kubectl rollout status deployment/django-app
      - name: Test service accessibility
        run: |
          kubectl port-forward svc/django-service 8000:8000 &
          sleep 5
          curl -f http://localhost:8000 || (echo "Service not accessible!" && exit 1)